// API Test Component for debugging exam endpoints\nimport React, { useState } from 'react';\nimport { examinationService } from '../../services/api/index';\n\nconst ExamsApiTest = () => {\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState({});\n  const [error, setError] = useState(null);\n\n  const testEndpoint = async (endpointName, testFunction) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log(`üß™ Testing ${endpointName}...`);\n      const result = await testFunction();\n      \n      setResults(prev => ({\n        ...prev,\n        [endpointName]: {\n          success: true,\n          data: result,\n          timestamp: new Date().toISOString()\n        }\n      }));\n      \n      console.log(`‚úÖ ${endpointName} test completed:`, result);\n    } catch (err) {\n      console.error(`‚ùå ${endpointName} test failed:`, err);\n      \n      setResults(prev => ({\n        ...prev,\n        [endpointName]: {\n          success: false,\n          error: err.message,\n          details: err.response?.data,\n          status: err.response?.status,\n          timestamp: new Date().toISOString()\n        }\n      }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const testAvailableExams = () => {\n    testEndpoint('Available Exams', examinationService.getAvailableExams);\n  };\n\n  const testStatistics = () => {\n    testEndpoint('Statistics', examinationService.getExamStatistics);\n  };\n\n  const testCompletedExams = () => {\n    testEndpoint('Completed Exams', examinationService.getCompletedExams);\n  };\n\n  const testAllData = () => {\n    testEndpoint('All Exam Data', examinationService.getAllExamsData);\n  };\n\n  const clearResults = () => {\n    setResults({});\n    setError(null);\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <h1 className=\"text-2xl font-bold mb-6 text-gray-800\">\n          üß™ Exams API Test Console\n        </h1>\n        \n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n          <button\n            onClick={testAvailableExams}\n            disabled={loading}\n            className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n          >\n            Test Available Exams\n          </button>\n          \n          <button\n            onClick={testStatistics}\n            disabled={loading}\n            className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n          >\n            Test Statistics\n          </button>\n          \n          <button\n            onClick={testCompletedExams}\n            disabled={loading}\n            className=\"bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n          >\n            Test Completed Exams\n          </button>\n          \n          <button\n            onClick={testAllData}\n            disabled={loading}\n            className=\"bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n          >\n            Test All Data\n          </button>\n        </div>\n        \n        <div className=\"flex gap-4 mb-6\">\n          <button\n            onClick={clearResults}\n            className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\"\n          >\n            Clear Results\n          </button>\n          \n          {loading && (\n            <div className=\"flex items-center text-blue-600\">\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n              Testing API...\n            </div>\n          )}\n        </div>\n        \n        {Object.keys(results).length > 0 && (\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Test Results:</h2>\n            \n            {Object.entries(results).map(([testName, result]) => (\n              <div key={testName} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"font-semibold text-lg\">\n                    {result.success ? '‚úÖ' : '‚ùå'} {testName}\n                  </h3>\n                  <span className=\"text-sm text-gray-500\">\n                    {new Date(result.timestamp).toLocaleTimeString()}\n                  </span>\n                </div>\n                \n                {result.success ? (\n                  <div className=\"bg-green-50 p-3 rounded\">\n                    <h4 className=\"font-medium text-green-800 mb-2\">Success Response:</h4>\n                    <pre className=\"text-sm text-green-700 overflow-x-auto whitespace-pre-wrap\">\n                      {JSON.stringify(result.data, null, 2)}\n                    </pre>\n                  </div>\n                ) : (\n                  <div className=\"bg-red-50 p-3 rounded\">\n                    <h4 className=\"font-medium text-red-800 mb-2\">Error Details:</h4>\n                    <div className=\"text-sm text-red-700\">\n                      <p><strong>Message:</strong> {result.error}</p>\n                      {result.status && <p><strong>Status:</strong> {result.status}</p>}\n                      {result.details && (\n                        <div className=\"mt-2\">\n                          <strong>Response:</strong>\n                          <pre className=\"mt-1 overflow-x-auto whitespace-pre-wrap\">\n                            {JSON.stringify(result.details, null, 2)}\n                          </pre>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <div className=\"mt-8 bg-gray-50 p-4 rounded\">\n          <h3 className=\"font-semibold mb-2\">üîß Debug Info:</h3>\n          <div className=\"text-sm text-gray-600 space-y-1\">\n            <p><strong>ExaminationService Available:</strong> {examinationService ? 'Yes ‚úÖ' : 'No ‚ùå'}</p>\n            <p><strong>Current Time:</strong> {new Date().toISOString()}</p>\n            <p><strong>API Base URL:</strong> {process.env.REACT_APP_API_BASE_URL || 'https://academy1.gp-app.tafra-tech.com/api'}</p>\n            <p><strong>Auth Token:</strong> {localStorage.getItem('authToken') ? 'Present ‚úÖ' : 'Missing ‚ùå'}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExamsApiTest;\n